{
  "error": {
    "message": "Streaming request timeout after 38s. Try reducing input length or increasing timeout in config.\n\nStreaming timeout troubleshooting:\n- Reduce input length or complexity\n- Increase timeout in config: contentGenerator.timeout\n- Check network connectivity\n- Check network stability for streaming connections\n- Consider using non-streaming mode for very long inputs",
    "stack": "Error: Streaming request timeout after 38s. Try reducing input length or increasing timeout in config.\n\nStreaming timeout troubleshooting:\n- Reduce input length or complexity\n- Increase timeout in config: contentGenerator.timeout\n- Check network connectivity\n- Check network stability for streaming connections\n- Consider using non-streaming mode for very long inputs\n    at EnhancedErrorHandler.handle (file:///home/atmandk/qwen-og/bundle/gemini.js:89412:17)\n    at ContentGenerationPipeline.handleError (file:///home/atmandk/qwen-og/bundle/gemini.js:89118:34)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ContentGenerationPipeline.executeWithErrorHandling (file:///home/atmandk/qwen-og/bundle/gemini.js:89082:18)\n    at async retryWithBackoff (file:///home/atmandk/qwen-og/bundle/gemini.js:91525:14)\n    at async GeminiChat.makeApiCallAndProcessStream (file:///home/atmandk/qwen-og/bundle/gemini.js:145012:33)\n    at async file:///home/atmandk/qwen-og/bundle/gemini.js:144939:33\n    at async Turn.run (file:///home/atmandk/qwen-og/bundle/gemini.js:25194:28)\n    at async GeminiClient.sendMessageStream (file:///home/atmandk/qwen-og/bundle/gemini.js:148292:26)\n    at async file:///home/atmandk/qwen-og/bundle/gemini.js:297018:24"
  },
  "context": [
    {
      "role": "user",
      "parts": [
        {
          "text": "This is the Qwen Code. We are setting up the context for our chat.\nToday's date is Wednesday, September 24, 2025 (formatted according to the user's locale).\nMy operating system is: linux\nI'm currently working in the directory: /home/atmandk/LowCal\nHere is the folder structure of the current working directories:\n\nShowing up to 20 items (files + folders). Folders or files indicated with ... contain more items not shown, were ignored, or the display limit (20 items) was reached.\n\n/home/atmandk/LowCal/\n├───.editorconfig\n├───.gitattributes\n├───.gitignore\n├───.npmrc\n├───.nvmrc\n├───.prettierignore\n├───.prettierrc.json\n├───.yamllint.yml\n├───CHANGELOG.md\n├───CONTRIBUTING.md\n├───Dockerfile\n├───esbuild.config.js\n├───eslint.config.js\n├───LICENSE\n├───Makefile\n├───package-lock.json\n├───package.json\n├───README.md\n├───SECURITY.md\n├───tsconfig.json\n├───...\n└───..."
        }
      ]
    },
    {
      "role": "model",
      "parts": [
        {
          "text": "Got it. Thanks for the context!"
        }
      ]
    },
    "\nYou are Qwen Code, an interactive CLI agent. Analyze the current directory and generate a comprehensive QWEN.md file to be used as instructional context for future interactions.\n\n**Analysis Process:**\n\n1.  **Initial Exploration:**\n    *   Start by listing the files and directories to get a high-level overview of the structure.\n    *   Read the README file (e.g., `README.md`, `README.txt`) if it exists. This is often the best place to start.\n\n2.  **Iterative Deep Dive (up to 10 files):**\n    *   Based on your initial findings, select a few files that seem most important (e.g., configuration files, main source files, documentation).\n    *   Read them. As you learn more, refine your understanding and decide which files to read next. You don't need to decide all 10 files at once. Let your discoveries guide your exploration.\n\n3.  **Identify Project Type:**\n    *   **Code Project:** Look for clues like `package.json`, `requirements.txt`, `pom.xml`, `go.mod`, `Cargo.toml`, `build.gradle`, or a `src` directory. If you find them, this is likely a software project.\n    *   **Non-Code Project:** If you don't find code-related files, this might be a directory for documentation, research papers, notes, or something else.\n\n**QWEN.md Content Generation:**\n\n**For a Code Project:**\n\n*   **Project Overview:** Write a clear and concise summary of the project's purpose, main technologies, and architecture.\n*   **Building and Running:** Document the key commands for building, running, and testing the project. Infer these from the files you've read (e.g., `scripts` in `package.json`, `Makefile`, etc.). If you can't find explicit commands, provide a placeholder with a TODO.\n*   **Development Conventions:** Describe any coding styles, testing practices, or contribution guidelines you can infer from the codebase.\n\n**For a Non-Code Project:**\n\n*   **Directory Overview:** Describe the purpose and contents of the directory. What is it for? What kind of information does it hold?\n*   **Key Files:** List the most important files and briefly explain what they contain.\n*   **Usage:** Explain how the contents of this directory are intended to be used.\n\n**Final Output:**\n\nWrite the complete content to the `QWEN.md` file. The output must be well-formatted Markdown.\n"
  ]
}